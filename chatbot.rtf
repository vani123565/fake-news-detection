{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}{\f2\fnil\fcharset161 Calibri;}{\f3\fnil\fcharset2 Wingdings;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\b\f0\fs36\lang9 SREE SAKTHI ENGINNERING COLLEGE\par
DEPARTMENT OF COMPUTER SCIENCE AND ENGINNEERING\par
\fs48 CREATE A CHATBOT USING PYTHON\par

\pard\sa200\sl276\slmult1\fs32 ABSTRACT:\b0\f1\fs28\par
\f0 A Chabot is artificial intelligence (AI) computer software that can simulate a conversation using textual or audio techniques. The basis of chat bots is artificial intelligence, which analyses a customer's data and blends the response with them. AI-powered bots can take over a variety of duties since they are considerably more powerful\f1\emdash and can execute numerous tasks at once. Natural language processing enables a bot to converse in the most natural manner possible. A balanced blend of innovative technology and human intervention is the optimal user-Chabot connection.\par
\b INTRODUCTION\f0\lang1033 :\par
\b0 Artificial Intelligence (\f2\lang1032\'c1\'c9) increasingly integrates our daily lives with the creation and analysis of intelligent software and hardware, called intelligent agents. Intelligent agents can do a variety of tasks ranging from labor work to sophisticated operations. A chatbot is a typical example of an AI system and one of the most elementary and widespread examples of intelligent Human-Computer Interaction (HCI). It is a computer program, which responds like a smart entity when conversed with through text or voice and understands one or more human languages by Natural Language Processing (NLP). Chatbots are also known as smart bots, interactive agents, digital assistants, or artificial conversation entities.\par
\b LITERATURE SURVEY\f0\lang1033 :\par
\b0 Alan Turing in 1950 proposed the Turing Test (\ldblquote Can machines think?\rdblquote ), and it was at that time that the idea of a chatbot was popularized. The first known chatbot was Eliza, developed in 1966, whose purpose was to act as a psychotherapist returning the user utterances in a question form. It used simple pattern matching and a template-based response mechanism. Its conversational ability was not good, but it was enough to confuse people at a time when they were not used to interacting with computers and give them the impetus to start developing other chatbots. An improvement over ELIZA was a chatbot with a personality named PARRY developed in 1972. In 1995, the chatbot ALICE was developed which won the Loebnier Prize, an annual Turing Test, in years 2000, 2001, and 2004. It was the first computer to gain the rank of the \ldblquote most human computer\rdblquote . ALICE relies on a simple pattern-matching algorithm with the underlying intelligence based on the Artificial Intelligence Markup Language (AIML), which makes it possible for developers to define the building blocks of the chatbot knowledge. Chatbots, like Smarter Child in 2001, were developed and became available through messenger applications. The next step was the creation of virtual personal assistants like Apple Siri, Microsoft Cortana, Amazon Alexa, Google Assistant and IBM Watson.\par
\b PROGRESS IN CHATBOT:\par
\b0 It is responsible for collecting the user queries from the user which are the inpA.A review on Chat Interface This unit is the front end of the system. It is ut to the system. It is also responsible for displaying the system generated results to the user. Therefore, it can be said that the chat interface is the face of the system throughwhich the entire communication takes place. It is the mediator of conversation between the system and the user. The query that user fires on the chat interface is passed on to the chatting backend which acts as a message delivering system between the Chat interface and the Machine Learning Layer. This interface can be accessed either as a website or as a smart phone app. The type of interface depends on the requirements of the user that are to be satisfied by the system. If the system is accessed from a smartphone, the interface will be in the form of an app and if the system is accessed from a website, then the interface will be in the form of a website. For building apps on the smartphone, it will require to use android for android phones or Swift for iOS. In this case, only the interfacing platform will be programmed on android and the complete backend processing of the system will take place on a server on which the system will be deployed.\par
\b PROPOSED SYSTEM:\par
\b0\f3\'d8\f0  Context identification: The input text is pre-processed to standardize it according to the system\rquote s requirements. The proper context is detected based on the keywords used in the text.\par
\f3\'d8\f0  AIML Response system: the user is attempting to have a normal conversation with the bot, and the input is mapped to an appropriate pattern in AIML files. The user receives the response if it is available.\par
\f3\'d8\f0  Query Analysis and Response System: upon receiving the personal queries like hey, hello, what are you doing?. The input text is analyzed to extract keywords. The user\rquote s request for information is understood based on the keywords, and the information is retrieved from the database. \par
\b ADVANTAGES:\par
\b0\f3\'d8\f0  Real time responses to all recurring questions\par
\f3\'d8\f0  Available 24\\7\par
\f3\'d8\f0  Conversational intelligence, personalization\par
\f3\'d8\f0  Web, mobile, messaging applications implementation\par
\f3\'d8\f0  Eliminate tedious time-consuming tasks\par
\b SYSTEM ARCHITECTURE:\par
\b0 A) Corpus or Training Data: Corpus means the data that could be used to train the NLP model to understand the human language as text or speech and reply using the same medium. Corpus is usually huge data with a lot of human interactions.\par
B) Chatbot window: We have designed a function which enables the user to interact with bot using text. The function keeps the chat window alive unless it is asked to break or quit. The name of our text bot is Jason.\par
C) Evaluate or test the chatbot: There could be multiple paths using which we can interact and evaluate the built text bot.\par
D) Data pre-processing\par
Text case [upper or lower] handling: Convert all the data coming as an input [corpus or user inputs] to either upper or lower case. This will avoid misrepresentation and misinterpretation of words if spelt under lower or upper cases.\par
E) Tokenization: Convert a sentence [i.e., a collection of words] into single words.\par
 (F)Stemming: It is a process to find similarities between words with the same root words. This will help us to reduce the bag of words by associating similar words with their corresponding root words.\par
G) Generate BOW [Bag of Words]: Process of converting words into numbers by generating vector embeddings from the tokens generated above. This is given as an input to the neural network model for understanding the written text. \par
\b MODULES:\par
\b0 It has three python code modules. \par
\f3 q\f0  Intents.json:intents classification or recognization it is a type of getting a spoken or written text and then classifying it based on what the user wants to achieve.\par
\f3 q\f0  Trainer.py: Defines the Chatbot overall file structure and contains the intent, actions, slots, stories, domain, config and endpoint details. The code will train an NLU and dialogue model to retrieve weather from the Yahoo weather API. Model folder contains the trained models. It will also start the server with actions and also runs the chatbot on the command line. Execute only this code as it will trigger the actions and run.py.\par
\f3 q\f0  Run.py: triggered by trainer.py. contains the modules to run the chatbot module in the command line.\par
\b IMPLEMENTATION\b0 :\par
\f3\'d8\f0  The implementations of a chatbot involve a variety of techniques. Understanding what the chatbot will offer and what category falls into helps developers pick the algorithms or platforms and tools to build it. At the same time, it also helps the end-users understand what to expect.\par
\f3\'d8\f0  The requirements for designing a chatbot include accurate knowledge representation, an answer generation strategy, and a set of predefined neutral answers to reply when user utterance is not understood. The first step in designing any system is to divide it into constituent parts according to a standard so that a modular development approach can be followed.\par
\f3\'d8\f0  The process starts with a user\rquote s request, for example, \ldblquote What is the meaning of environment?\rdblquote , to the chatbot using a messenger app like Facebook, Slack, WhatsApp, WeChat or Skype, or an app using text or speech input like Amazon Echo.\par
\f3\'d8\f0  After the chatbot receives the user request, the Language Understanding Component parses it to infer the user\rquote s intention and the associated information (intent: \ldblquote translate,\rdblquote  entities: [word: \ldblquote environment\rdblquote ]).\par
\f3\'d8\f0  Once a chatbot reaches the best interpretation it can, it must determine how to proceed. It can act upon the new information directly, remember whatever it has understood and wait to see what happens next, require more context information or ask for clarification.\par
\f3\'d8\f0  When the request is understood, action execution and information retrieval take place. The chatbot performs the requested actions or retrieves the data of interest from its data sources, which may be a database, known as the Knowledge Base of the chatbot, or external resources that are accessed through an API call.\par
\f3\'d8\f0  Upon retrieval, the Response Generation Component uses Natural Language Generation (NLG) to prepare a natural language human-like response to the user based on the intent and context information returned from the user message analysis component. The appropriate responses are produced by one of the three models: rule-based, retrieval based, and generative model.\par
\f3\'d8\f0  A Dialogue Management Component keeps and updates the context of a conversation which is the current intent, identified entities, or missing entities required to fulfill user requests. Moreover, it requests missing information, processes clarifications by users, and asks follow-up questions. \par
\b RESULT:\par
\b0  The purpose of a chatbot system is to simulate a human conversation. Its architecture integrates a language model and computational algorithm to emulate information online communication between a human and a computer using natural language.\par
\b CONCLUSION:\par
\b0 chatbots or smart assistants with artificial intelligence, in my opinion, are revolutionizing the world. In comparison to larger chatbots developing a simple chatbot is not a difficult effort, and developers need understand and address concerns such as reliability, scalability, and adaptability, as well as high level of intent on human language. Chatbots are more effective than people in reaching out to a big audience via messaging apps. They have the potential to become a useful information gathering tool in the near future.\par
\lang9\par
}
 